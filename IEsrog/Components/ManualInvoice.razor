@using IEsrog.Extensions
@using IEsrog.Models
@using IEsrog.Services
@using MongoDB.Bson
@inject AppStateService State

<style>
    body {
        font-family: 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;
        text-align: center;
        color: #777;
    }

        body h1 {
            font-weight: 300;
            margin-bottom: 0;
            padding-bottom: 0;
            color: #000;
        }

        body h3 {
            font-weight: 300;
            margin-top: 10px;
            margin-bottom: 20px;
            font-style: italic;
            color: #555;
        }

        body a {
            color: #06f;
        }

    .invoice-box {
        padding: 30px;
        border: 1px solid #eee;
        font-size: 16px;
        line-height: 24px;
        font-family: 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;
        color: #555;
    }

    table {
        width: 100%;
        height: 100%;
        line-height: inherit;
        text-align: left;
        border-collapse: collapse;
    }

    .invoice-box table td {
        padding: 5px;
        vertical-align: top;
    }

    .invoice-box table tr.top table td {
        padding-bottom: 20px;
    }

        .invoice-box table tr.top table td.title {
            font-size: 45px;
            line-height: 45px;
            color: #333;
        }


    .invoice-box table tr.heading td {
        background: #eee;
        border-bottom: 1px solid #ddd;
        font-weight: bold;
    }

    .invoice-box table tr.details td {
        padding-bottom: 20px;
    }

    .invoice-box table tr.item td {
        border-bottom: 1px solid #eee;
    }

    .invoice-box table tr.item.last td {
        border-bottom: none;
    }

    .invoice-box table tr.total td:nth-child(2) {
        border-top: 2px solid #eee;
        font-weight: bold;
    }

    @@media only screen and (max-width: 600px) {
        .invoice-box table tr.top table td {
            width: 100%;
            display: block;
            text-align: center;
        }
    }

</style>
<div style="margin: 10px auto; width:800px; height: 1500px;">
    <div class="sticky bg-green-500 text-white rounded-lg py-4 my-4 px-2 flex shadow-md overflow-x-auto">
        <button @onclick="Save" class="px-2 py-1 mx-2 text-sm text-green-600 bg-white rounded-md flex items-center shadow-lg">
            <i class="fa fa-save"></i>&nbsp;Save
        </button>
        <i style="align-self: self-end">User and items are required</i>
    </div>
    <div class="invoice-box">
        <div style="text-align:right;">ב"ה</div>
        <table>
            <tr class="top">
                <td colspan="4">
                    <div style="text-align:center;">
                        <b>Yanky Kahn</b> | <b>818-605-2066</b> | <b>18253 Topham st. Tarzana CA 91335</b>
                    </div>
                </td>
            </tr>

            <tr>
                <td colspan="4">
                    <table>
                        <tr>
                            <td>
                                <b>Customer information:</b><br />
                                <span style="position: relative">
                                    <input placeholder="Name" @bind="_User.FirstName"
                                           style="position: absolute; width: calc(100% - 40px);" />
                                    <select style="outline: 0;" @onchange="OnUserChanged">
                                        <option value=""></option>
                                        @foreach (var user in State.AdminState.AllUsers)
                                        {
                                            <option hidden="@(!$"{user.FirstName} {user.LastName}".Contains(_User.FirstName, StringComparison.InvariantCultureIgnoreCase))"
                                                    value="@user.Id">@user.FirstName @user.LastName</option>
                                        }
                                    </select>
                                </span><br />
                                @_User.Email<br />
                                @_User.PhoneNumber<br />
                                @_User.Address.ToString()
                            </td>
                            <td></td>
                            <td style="text-align:right;">
                                <br />
                                Invoice: #@_Order.Id[..6]<br />
                                Created: @($"{_Order.CreatedAt:MM/dd/yyyy}")<br />
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td colspan="4">
                    <b>Orderd items:</b>
                </td>
            </tr>

            <tr class="heading">
                <td>Item</td>
                <td>Qty</td>
                <td>Price</td>
                <td style="text-align:right;">Subtotal</td>
            </tr>

            @foreach (var item in _Items)
            {
                <tr>
                    <td style="position: relative">
                        <button @onclick="() => Remove(item)"
                            class="absolute -left-6 px-2 text-md text-white bg-red-500 rounded-md hover:bg-red-700">
                            -
                        </button>
                        <input @bind="item.Name"
                               style="position: absolute; width: calc(100% - 40px);"/>
                        <select @onchange="e => OnProdChange(e, item)"
                                style="outline: 0;">
                            <option value=""></option>
                            @foreach (var prod in State.Products)
                            {
                                <option value="@prod.Id">@prod.Name <small>$@prod.Price</small></option>
                            }
                        </select>
                    </td>
                    <td>
                        <input @bind="item.Qty" />
                    </td>
                    <td>
                        <input @bind="item.Price" />
                    </td>
                    <td style="text-align: right">
                        $@($"{item.Qty * item.Price:N2}")
                    </td>
                </tr>
            }

            <tr class="total">
                <td colspan="3">
                    <button @onclick="Add"
                            class="px-3 py-1 text-md text-white bg-green-500 rounded-md hover:bg-green-700">
                        +
                    </button>
                </td>

                <td style="text-align:right;">Total: $@($"{_Items.GetTotal():N2}")</td>
            </tr>

            <tr class="heading">
                <td colspan="2">Payment Method</td>

                <td colspan="2"></td>
            </tr>

            <tr class="details">
                <td colspan="2">
                    <input type="checkbox" /> Check <small>18253 topham st. Tarazana CA 91335</small>

                    <input type="checkbox" /> CashApp <small>8186052066</small>
                    <br />
                    <input type="checkbox" /> PayPal <small>chabad18@hotmail.com</small>

                    <input type="checkbox" /> Zelle <small>chabad18@hotmail.com</small>
                </td>

                <td colspan="2"></td>
            </tr>

            <tr class="heading">
                <td colspan="2">Shipment price <small>(Without schach)</small></td>

                <td colspan="2" style="text-align: right;">
                    $<input type="number" @bind="_Order.ShippingCost"
                            style="background: inherit; text-align: end;" />
                </td>
            </tr>
        </table>
        <div style="text-align: center;">
            <h4>Thank's for your buisness</h4>
        </div>
        <div style="text-align: left;">
            <small>Order id: # @_Order.Id</small>
        </div>
    </div>
</div>

@code
{
    [Parameter] 
    public Action<Order, User>? OnSave { get; set; }

    Order? _FromOrder;

    [Parameter]
    public Order? FromOrder
    {
        get => _FromOrder;
        set
        {
            _FromOrder = value;
            if(value != null)
                _Order = value.Clone();
        }
    }

    readonly List<OrderItem> _Items = new();
    Order _Order = new();
    User _User = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _Order.Id = ObjectId.GenerateNewId().ToString();
        _Order.CreatedAt = DateTime.Now;
    }

    void Save()
    {
        _Order.Items = _Items;
        OnSave?.Invoke(_Order, _User);
    }

    void OnProdChange(ChangeEventArgs e, OrderItem item)
    {
        if (e.Value is not string pid || string.IsNullOrWhiteSpace(pid)) return;

        var prod = State.Products.First(p => p.Id == pid);
        item.Name = prod.Name;
        item.Price = prod.Price;
        item.ProductId = prod.Id;
        item.PriceType = prod.PricesType;
        item.Category = prod.Category;
    }

    void Add() => _Items.Add(new OrderItem());

    void Remove(OrderItem item) => _Items.Remove(item);

    void OnUserChanged(ChangeEventArgs e)
    {
        if (e.Value is not string uid || string.IsNullOrWhiteSpace(uid)) return;

        var user = State.AdminState.AllUsers.First(u => u.Id == uid);
        _User = user;
        _Order.UserId = user.Id;
    }

}