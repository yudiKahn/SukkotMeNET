@page "/shop"
@using IEsrog.Models
@using IEsrog.Services
@using MongoDB.Bson
@using IEsrog.Components
@using Newtonsoft.Json
@inherits PageBase
@inject AppStateService State
@attribute [Authorize(Policy = Constants.Policies.IsUser)]

<div class="antialiased bg-gray-200 dark:bg-gray-800 text-gray-900 font-sans p-6 flex-grow">
    <div class="container mx-auto relative">

        @* <div class="sticky bg-green-500 text-white rounded-lg py-4 px-2 flex shadow-md overflow-x-auto">
            <button @onclick="CopyOrder" class="px-2 py-1 mx-2 text-sm text-green-600 bg-white rounded-md flex items-center shadow-lg">
                <i class="fa fa-repeat"></i>&nbsp;Reorder
            </button>

            @if (State.User.IsAdmin)
            {
                <button @onclick="SelectUser" class="px-2 py-1 mx-2 text-sm text-green-600 bg-white rounded-md flex items-center shadow-lg">
                    <i class="fa fa-user"></i>&nbsp;
                    @if (State.ForUser is { } fu)
                    {
                        <span>For @($"{fu.FirstName} {(fu.LastName.Length > 0 ? fu.LastName[0] : string.Empty)}.")</span>
                    }
                    else
                    {
                        <span>For User</span>
                    }
                </button>
            }
        </div>
 *@
        <div class="flex flex-wrap -mx-4">
            @{
                for (var i = 0; i < _Products.Length; i++)
                {
                    var tmp = i;
                    <ItemsCard Product="_Products[tmp]" Click="() => ShowAddingItem(tmp)" />
                }
            }
        </div>
    </div>
</div>

<CopyOrderPopup @ref="_CopyOrder" />

@if (IsInUserSelection)
{
    <div class="fixed p-5 w-screen h-screen top-0 z-50 bg-black bg-opacity-50" @onclick="() => IsInUserSelection = false">
        <div class="relative w-full h-full">
            <div @onclick:stopPropagation="true"
                 class="rounded-md shadow-xl absolute bg-white inset-1/2 transform -translate-x-1/2 -translate-y-1/2 w-full h-2/3 md:w-2/3 overflow-y-auto">
                <div class="rounded-t mb-0 px-4 py-3 border-0">
                    <div class="flex flex-wrap items-center">
                        <div class="relative w-full px-4 max-w-full flex-grow flex-1">
                            <input placeholder="Filter by name" @bind="FilterName" @bind:event="oninput"
                                   class="p-3 appearance-none block w-full md:w-1/2 text-gray-700 rounded leading-tight" />
                        </div>
                    </div>
                </div>
                <div>
                    <ul class="h-full overflow-y-auto">
                        @foreach (var user in State.AdminState.AllUsers.OrderBy(u => $"{u.FirstName}{u.LastName}"))
                        {
                            <li hidden="@(!string.IsNullOrEmpty(FilterName) && !$"{user.FirstName.ToLower()} {user.LastName.ToLower()}".Contains(FilterName.ToLower()))"
                                class="px-3 py-4" @onclick="() => SelectUser(user)">
                                <div class="flex">
                                    <input id="@user.Id" type="radio" name="usrs-grp" class="flex-none w-20" />
                                    <label for="@user.Id" class="flex-none w-80">@user.FirstName @user.LastName</label>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
}