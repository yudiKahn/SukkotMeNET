@using SukkotMeNET.Extensions
@using SukkotMeNET.Interfaces
@using SukkotMeNET.Components
@using SukkotMeNET.Models
@using SukkotMeNET.Services
@inherits LayoutComponentBase
@inject AppStateService State
@inject MainService MainService

<PageTitle>SukkotMeNET</PageTitle>

<Navbar />

@if (State.Alerts.Any())
{
    <div class="fixed w-full h-full top-0 z-50 bg-opacity-50 bg-white">
        @foreach (var alert in State.Alerts)
        {
            <div class="@string.Format($"relative bg-{alert.Type.ToFriendlyString()}-100 border-{alert.Type.ToFriendlyString()}-400 text-{alert.Type.ToFriendlyString()}-700 left-1/2 transform -translate-x-1/2 mt-5 border px-4 py-3 w-1/2 rounded")" role="alert">
                <strong class="font-bold">@alert.Title</strong>
                <span class="block sm:inline">@alert.Message</span>
                <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
                    <svg class="@string.Format($"fill-current h-6 w-6 text-{alert.Type.ToFriendlyString()}-500")" role="button" @onclick="@OnRemoveAlert(alert)" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><title>Close</title><path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z" /></svg>
                </span>
            </div>
        }
    </div>
}

<span class="fixed text-white bg-green-500 z-40 rounded-r-md py-3 mt-5 cursor-pointer" style="writing-mode: tb; font-size: 20px;"
      @onclick="() => _ShowShmittahPopup = true">
    <b><i class="fa fa-info-circle" aria-hidden="true"></i> SHMITTAH</b>
</span>

@if (_ShowShmittahPopup)
{
    <div class="fixed w-full h-full top-0 z-50 bg-white">
        <div class="text-right p-2">
            <bold><i class="fa fa-times fa-2x cursor-pointer" @onclick="() => _ShowShmittahPopup = false"></i></bold>
        </div>
        <div class="w-full m-3 text-center">
            <div class="mx-auto w-2/3">
                בס״ד
                <br />
                <h1 class="heading">ISRAELI ESROG SHMITTAH AWARENESS</h1>

                Please be aware that all our esrogim from Eretz Yisrael need to be
                treated with kedushas shviis. As you can see, they are all kosher to use
                because of Otzar Beis Din, but they retain the status of shmitta fruit
                <br />
                that needs to be treated appropriately.
                <br />
                <b>One important example:</b> After sukkos it is ideal to return all esrogim to
                Israel (you can return them to me) or at least make sure that they are
                not discarded in a wrong way (have people return them to you). It must
                first be left out to rot (shrivel entirely?) and only afterwards can be put
                in the trash, and even then only after being put in a plastic bag. It
                seems that making it into jam is not necessarily ok, and certainly not
                <br />
                using with cloves a besomim.
                <br />
                Other items, for example, how to avoid “doing business with shviis
                produce”: one concept is that extra fee people pay you this year is for
                the Lulav and other items, while the esrog comes as a gift or at not
                <br />
                more than the price stipulated by the Bais din.
                <br />
                <b class="underline">
                    Note: This page is only intended to draw your awareness to the issues.
                    As with all items of Halachah, contact your local orthodox rov.
                </b>
            </div>
        </div>
    </div>
}

<CascadingValue Value="this" Name="ErrorComponent">
    @Body
</CascadingValue>

<Footer />

@code {
    bool _ShowShmittahPopup = false;

    protected override void OnInitialized()
    {
        MainService.StateHasChanged += (sender, e) => InvokeAsync(this.StateHasChanged);
    }

    Action OnRemoveAlert(Alert alert) => () => MainService.RemoveAlert(alert);
}