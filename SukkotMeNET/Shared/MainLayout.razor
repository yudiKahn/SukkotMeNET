@using SukkotMeNET.Extensions
@using SukkotMeNET.Interfaces
@using SukkotMeNET.Components
@using SukkotMeNET.Models
@using SukkotMeNET.Services
@inherits LayoutComponentBase
@inject AppStateService State
@inject MainService MainService

<PageTitle>SukkotMeNET</PageTitle>

<Navbar />

@if (State.Alerts.Any())
{
    <div class="fixed w-full h-full top-0 z-50 bg-opacity-50 bg-white">
        @foreach (var alert in State.Alerts)
        {
            <div class="@string.Format($"relative bg-{alert.Type.ToFriendlyString()}-100 border-{alert.Type.ToFriendlyString()}-400 text-{alert.Type.ToFriendlyString()}-700 left-1/2 transform -translate-x-1/2 mt-5 border px-4 py-3 w-1/2 rounded")" role="alert">
                <strong class="font-bold">@alert.Title</strong>
                <span class="block sm:inline">@alert.Message</span>
                <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
                    <svg class="@string.Format($"fill-current h-6 w-6 text-{alert.Type.ToFriendlyString()}-500")" role="button" @onclick="@OnRemoveAlert(alert)" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><title>Close</title><path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z" /></svg>
                </span>
            </div>
        }
    </div>
}

<CascadingValue Value="this" Name="ErrorComponent">
    @Body
</CascadingValue>

<Footer />

@code {
    protected override void OnInitialized()
    {
        MainService.StateHasChanged += (sender, e) => InvokeAsync(this.StateHasChanged);
    }

    Action OnRemoveAlert(Alert alert) => () => MainService.RemoveAlert(alert);
}