@using SukkotMeNET.Models
@using SukkotMeNET.Extensions

@if (_IsVisible && _Order != null)
{
    <div class="fixed inset-0 bg-black bg-opacity-50 z-50 items-center justify-center">
        <div class="fixed z-50 w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full">
            <div class="relative w-full max-w-2xl max-h-full">
                <!-- Modal content -->
                <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                    <!-- Modal header -->
                    <div class="flex items-start justify-between p-4 border-b rounded-t dark:border-gray-600">
                        <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                            Reorder <i>#@(_Order.Id[..6])</i>
                        </h3>
                        <button @onclick="() => Close(false)" type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-hide="staticModal">
                            <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                            </svg>
                            <span class="sr-only">Close modal</span>
                        </button>
                    </div>
                    <!-- Modal body -->
                    <div class="p-6 space-y-6">
                        <div class="mt-8">

                            <ul class="pl-0">
                                @foreach (var item in _Order.Items)
                                {
                                    <li class="mb-4">
                                        <div class="flex items-start">
                                            <div class="text-base leading-6 flex flex-col md:flex-row flex-wrap flex-grow justify-between items-baseline">
                                                <a href="/shop/item/${v._id}" class="text-gray-700 flex-shrink-0">
                                                    @item.Name <small>@item.PriceType @item.Option</small>
                                                </a>
                                                <div class="flex-shrink-0 mt-1 md:mt-0">
                                                    <small class="ml-5 mr-3">@item.Qty &times; @($"{item.Price:N2}") = </small>
                                                    <span class="text-lg text-gray-800 font-bold">
                                                        $@($"{item.Qty * item.Price:N2}")
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </li>
                                }


                                <li class="mt-10">
                                    <div class="flex justify-end">
                                        Total: &nbsp;&nbsp;
                                        <span class="text-lg text-gray-800 font-bold">$@($"{_Order.Items.GetTotal():N2}")</span>
                                    </div>
                                </li>
                            </ul>
                        </div>

                    </div>
                    <!-- Modal footer -->
                    <div class="flex items-center p-6 space-x-2 border-t border-gray-200 rounded-b dark:border-gray-600">

                        <p>Are you sure you want to create new order?</p>

                        <button @onclick="() => Close(true)" data-modal-hide="staticModal" type="button" class="text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800">
                            Ok
                        </button>
                    </div>
                </div>
            </div>
        </div>

    </div>
}

@code {
    private bool _IsVisible = false;
    private Order? _Order;

    public event EventHandler<bool> Closed;

    public void Show(Order order)
    {
        _Order = order;
        _IsVisible = true;
        StateHasChanged();
    }

    private void Close(bool ok)
    {
        _Order = null;
        _IsVisible = false;
        StateHasChanged();
        Closed?.Invoke(this, ok);
    }
}
