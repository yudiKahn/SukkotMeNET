@page "/admin"
@using SukkotMeNET.Components
@using SukkotMeNET.Services
@using Microsoft.AspNetCore.Mvc
@attribute [Authorize(Policy = Constants.Policies.IsAdmin)]

<section class="py-20 bg-white dark:bg-gray-800">
    <div class="container max-w-6xl mx-auto">
        <h2 class="text-4xl font-bold tracking-tight text-center dark:text-gray-200">
            Welcome back Yanky
        </h2>
        <p class="mt-2 text-lg text-center text-gray-600 dark:text-gray-300">Check out our list of awesome features below.</p>
        <div class="grid grid-cols-4 gap-8 mt-10 sm:grid-cols-8 lg:grid-cols-12 px-8">
            
            <Card FaIcon="fa-file" Title="Create order for user" Link="/admin/createorder" />

            <Card FaIcon="fa-users" Title="All Users" Link="/admin/users"/>

            <Card FaIcon="fa-chart-bar" Title="All Orders" Link="/admin/orders" />

            <Card FaIcon="fa-shopping-basket" Title="Items"/>
            
            <Card FaIcon="fa-hdd" Title="Backup data" Onclick="@Backup"/>
            
            <Card FaIcon="fa-key" Title="Change password" Link="/admin/changepassword" />
            
            <Card FaIcon="fa-chart-pie" Title="Analytics" />

            <Card FaIcon="fa-sign-out-alt" Title="Logout" Onclick="@Logout" />
        </div>
    </div>
</section>

@code {
    [Inject] public MainStateService Service { get; set; }    
    [Inject] public NavigationManager Navigation { get; set; }
    [Inject] public IJSRuntime Js { get; set; }

    async void Logout()
    {
        await Js.InvokeVoidAsync(Constants.JavaScriptFunctions.LocalStorageRemove, "token");
        Service.Logout();
        Navigation.NavigateTo("/login");
    }

    async void Backup()
    {
        var data = await Service.Backup();

        var path = "C:\\Users\\yudik\\Documents\\Dev\\SukkotMe\\Backup";
        await File.WriteAllTextAsync(Path.Combine(path, "Carts.json"), data.Carts);
        await File.WriteAllTextAsync(Path.Combine(path, "Items.json"), data.Items);
        await File.WriteAllTextAsync(Path.Combine(path, "Orders.json"), data.Orders);
        await File.WriteAllTextAsync(Path.Combine(path, "Users.json"), data.Users);
    }
}
