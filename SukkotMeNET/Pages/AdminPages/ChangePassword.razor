@page "/admin/changepassword"
@using SukkotMeNET.Models
@inherits SukkotMeNET.Models.PageBase
@attribute [Authorize(Policy = Constants.Policies.IsAdmin)]

<section class="w-full px-2 py-20 bg-gray-100 xl:px-8 flex-grow dark:bg-gray-700">
    <div class="max-w-5xl mx-auto py-16">
        <div class="grid" style="place-items:center;">

            <div class="w-full mt-16 md:mt-0 md:w-2/5">
                <div class="relative z-10 h-auto p-8 py-10 overflow-hidden bg-white dark:bg-gray-800 border-b-2 border-gray-300 dark:border-gray-900 rounded-lg shadow-2xl px-7">
                    <div>
                        <h3 class="mb-6 text-2xl font-medium text-center dark:text-gray-300">Change user's password</h3>
                        <input type="email" @bind-value="@Email" class="block w-full px-4 py-3 mb-4 border border-2 border-transparent border-gray-200 rounded-lg focus:ring focus:ring-green-500 focus:outline-none" placeholder="Email address" />
                        <input type="text" @bind-value="@NewPassword" class="block w-full px-4 py-3 mb-4 border border-2 border-transparent border-gray-200 rounded-lg focus:ring focus:ring-green-500 focus:outline-none" placeholder="Password" />
                        <div class="block">
                            <button class="w-full px-3 py-4 font-medium text-white bg-green-600 rounded-lg" @onclick="OnSubmit">
                                Change
                            </button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</section>

@code {
    public string Email { get; set; }
    public string NewPassword { get; set; }

    async void OnSubmit()
    {
        var s = await MainService.ChangeUserPassword(Email, NewPassword);
        
        MainService.AddAlert(new Alert($"Change {(s ? "success": "fail")}", "", s ? AlertType.Success : AlertType.Error));
    }
}
