@page "/user/cart"
@using IEsrog.Extensions
@using IEsrog.Models
@using IEsrog.Services
@inherits PageBase
@attribute [Authorize(Policy = Constants.Policies.IsUser)]

<div class="w-full bg-white grid place-content-center flex-grow dark:bg-gray-800" style="min-height: 80vh;">
    <div class="container relative my-4">
        @if (State.ForUser is {} fu)
        {
            <span class="absolute top-0 right-0 px-2 py-1 -mt-3 -mr-6 text-sm font-medium leading-tight text-white bg-red-600 rounded-full">
                Order for @($"{fu.FirstName} {fu.LastName}")!
            </span>
        }
        @if (State?.Cart?.Items?.Any() == true)
        {
            <div class="rounded-lg shadow-lg overflow-hidden">
                <div class="px-6 py-8 bg-white sm:p-10 sm:pb-6">
                    <h3 class="text-2xl leading-8 font-extrabold text-gray-900 sm:text-3xl sm:leading-9">
                        @string.Format($"{State?.User?.FirstName}, Here is your cart")
                    </h3>

                    <div class="mt-8">

                        <ul class="pl-0">
                            <li class="mb-5">
                                <div>
                                    <button type="button" @onclick="() => CanEditQty = !CanEditQty" class="rounded-md text-white bg-green-700 px-4 py-2 text-xs font-bold mr-3 cursor-pointer">
                                        @(CanEditQty ? "STOP EDIT" : "EDIT QUANTITY")
                                    </button>
                                    <button type="button" disabled="@(!CanEditQty)" @onclick="MainService.SaveCurrentCart" class=@string.Concat("rounded-md text-white bg-green-700 px-4 py-2 text-xs font-bold mr-3 cursor-pointer ", CanEditQty ? "" : "opacity-50")>
                                        SAVE
                                    </button>
                                </div>
                            </li>
                            @foreach (var item in State.Cart.Items)
                            {
                                <li class="mb-4">
                                    <div class="flex items-start">
                                        <div class="text-base leading-6 flex flex-col md:flex-row flex-wrap flex-grow justify-between items-baseline">
                                            <div class="text-gray-700 flex-shrink-0">
                                                @item.Name <small>@item.PriceType @item.Option</small>
                                            </div>
                                            <div class="flex-shrink-0 mt-1 md:mt-0">
                                                <small class="ml-5 mr-3">@item.Qty &times; @($"{item.Price:N2}") = </small>
                                                <span class="text-lg text-gray-800 font-bold">
                                                    $@((item.Qty * item.Price).ToString("N1"))
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="flex items-start mt-3">
                                        <div class="flex-shrink-0">
                                            <span @onclick="() => Delete(item)" class="rounded-md text-gray-700 leading-6 border border-solid border-gray-400 px-4 py-2 text-xs font-bold mr-3 cursor-pointer">
                                                DELETE
                                            </span>
                                            <input type="number" disabled="@(!CanEditQty)" min="1" @bind="@item.Qty" class="shadow appearance-none border-none rounded w-40 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"/>
                                        </div>
                                    </div>
                                </li>
                            }


                            <li class="mt-10">
                                <div class="flex justify-end">
                                    Total: &nbsp;&nbsp;
                                    <span class="text-lg text-gray-800 font-bold">$@State.Cart.Items.GetTotal().ToString("N2")</span>
                                </div>
                            </li>
                            <li class="mt-5">
                                <div>Comment:</div>
                                <textarea @bind="@State.Cart.Comment" maxlength="100" style="max-height: 100px;" class="w-full shadow appearance-none border-none rounded w-40 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
                            </li>

                        </ul>
                    </div>
                </div>
                <div class="px-6 pt-6 pb-8 bg-gray-100 sm:p-10 sm:pt-6">
                    <button @onclick="@CreateOrderFromCart" class="w-full rounded-md flex items-center justify-center px-5 py-3 border border-solid border-green-700 text-lg leading-6 font-medium rounded-md text-green-700">
                        Submit an order
                    </button>
                    <NavLink href="/shop" class="mt-6 rounded-md flex items-center justify-center px-5 py-3 border border-solid border-gray-400 text-lg leading-6 font-medium rounded-md text-gray-700">
                        Go Shopping
                    </NavLink>
                </div>
            </div>
        }
        else
        {
            <section class="py-20 bg-white" style="min-height: 80vh;">
                <div class="px-4 mx-auto text-center max-w-7xl sm:px-6 lg:px-8">
                    <h2 class="text-3xl font-extrabold tracking-tight text-green-600 my-6 sm:text-4xl md:text-5xl xl:text-6xl">
                        Cart Is Empty...
                    </h2>
                    <NavLink href="/shop" class="max-w-md underline mx-auto mt-3 text-base text-gray-500 sm:text-lg md:mt-5 md:text-xl md:max-w-3xl">
                        Go Back Shopping
                    </NavLink>
                    &nbsp;&nbsp;|&nbsp;
                    <NavLink href="/user/orders" class="max-w-md underline mx-auto mt-3 text-base text-gray-500 sm:text-lg md:mt-5 md:text-xl md:max-w-3xl">
                        View orders
                    </NavLink>
                </div>
            </section>
        }
    </div>
</div>


@code {
    [Inject] public AppStateService State { get; set; }
    [Inject] IJSRuntime _Js { get; set; }
    [Inject] public NavigationManager Nav { get; set; }

    public bool CanEditQty { get; set; }

    async void Delete(OrderItem item)
    {
        if (await _Js.InvokeAsync<bool>(Constants.JavaScriptFunctions.Confirm, $"To delete item?"))
        {
            MainService.RemoveItemFromCart(item);
        }
    }

    async void CreateOrderFromCart()
    {
        var res = await MainService.CreateOrderFromCart();
        if (res is not null)
        {
            MainService.AddAlert(new Alert("Success", "Order created successfully", AlertType.Success));
            Nav.NavigateTo($"/user/order/{res.Id}/invoice");
        }
        else
            MainService.AddAlert(new Alert("Failed", "Failed creating order", AlertType.Error));
    }
}