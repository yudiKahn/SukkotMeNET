@page "/shop"
@using SukkotMeNET.Extensions
@using SukkotMeNET.Interfaces
@using SukkotMeNET.Models
@using SukkotMeNET.Services
@inject AppStateService _State
@attribute [Authorize(Policy = Constants.Policies.IsUser)]

<div class="antialiased bg-gray-200 dark:bg-gray-800 text-gray-900 font-sans p-6 flex-grow">
    <div class="container mx-auto">
        <div class="flex flex-wrap -mx-4">
            @foreach (var item in _State.ShopItems)
            {
                <div class="w-full sm:w-1/2 md:w-1/3 xl:w-1/4 p-4">
                    <div class="c-card block bg-white shadow-md hover:shadow-xl rounded-lg overflow-hidden">
                        <div>
                            <img class="inset-0 object-contain mx-auto" style="width:200px; height:200px;" src=@item.GetItemIcon() alt="logo"/>
                        </div>
                        <div class="p-3 items-center text-sm text-gray-600">
                            <h5 class="font-bold">@item.Name</h5>
                            <p class="my-1">@item.Prices.GetFriednlyRange('$')</p>

                            <button @onclick="() => SelectItem(item)" class="font-medium bg-green-500 hover:bg-green-700 text-white py-1 px-2 rounded">
                                Add To Cart
                            </button>
                        </div>

                    </div>
                </div>
            }
        </div>
    </div>
</div>

@if (SelectedItem != null)
{
    <div class="fixed w-full h-full top-0 z-50 bg-opacity-50 bg-white">
        <section class="w-full px-2 py-20 xl:px-8 flex-grow dark:bg-gray-700">
            <div class="max-w-5xl mx-auto py-16">
                <div class="grid" style="place-items:center;">
                    <div class="w-full mt-16 md:mt-0 md:w-2/5">
                        <div class="relative z-10 h-auto p-8 py-10 overflow-hidden bg-white dark:bg-gray-800 border-b-2 border-gray-300 dark:border-gray-900 rounded-lg shadow-2xl px-7">
                            <EditForm Model="@OrderItem" OnSubmit="@OnSubmit">
                                <h3 class="mb-6 text-2xl font-medium dark:text-gray-300">
                                    @SelectedItem.Category - @SelectedItem.Name
                                </h3>

                                <select @onchange="e => OnPriceSelectChange(Convert.ToInt32(e.Value))"
                                    required class="block w-full px-4 py-3 mb-4 border border-2 border-transparent border-gray-200 rounded-lg focus:ring focus:ring-green-500 focus:outline-none">
                                    @for (int i = 0; i < SelectedItem.Prices.Length; i++)
                                    {
                                        <option value="@i">
                                            $@SelectedItem.Prices[i]
                                            @if (SelectedItem.PricesTypes.ElementAtOrDefault(i) != null)
                                            {
                                                <span> - @SelectedItem.PricesTypes[i]</span>
                                            }
                                        </option>
                                    }
                                </select>
                                @if (SelectedItem.Options.Length > 1)
                                {
                                    <select @bind="OrderItem.Option" required class="block w-full px-4 py-3 mb-4 border border-2 border-transparent border-gray-200 rounded-lg focus:ring focus:ring-green-500 focus:outline-none">
                                        @foreach (var option in SelectedItem.Options)
                                        {
                                            <option value="@option">@option</option>
                                        }
                                    </select>
                                }

                                <span class="relative inline-flex w-full">
                                    <input required type="number" min="1" placeholder="Qty" @bind-value="OrderItem.Qty"
                                       class="block w-full px-4 py-3 mb-4 border border-2 border-transparent border-gray-200 rounded-lg focus:ring focus:ring-green-500 focus:outline-none" />

                                    @if (SelectedItem.Id == Constants.General.IsraeliSetItemId)
                                    {
                                        <span class="absolute top-0 right-0 px-2 py-1 -mt-3 -mr-3 text-sm font-medium text-white bg-green-500 rounded-full">
                                            Free 20% extra
                                        </span>
                                    }
                                </span>

                                <div class="block">
                                    <button class="w-full px-3 py-4 font-medium text-white bg-green-600 rounded-lg" type="submit">
                                        Add To Cart
                                    </button>
                                    <button type="button" @onclick="() => SelectItem(null)" class="w-full px-3 pt-3 font-medium text-gray-600 dark:text-gray-400">
                                        Go Back Shopping
                                    </button>
                                </div>
                            </EditForm>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
}

@code {
    [Inject]
    MainService MainService { get; set; }

    Item SelectedItem = null;

    void SelectItem(Item? item)
    {
        SelectedItem = item;

        if (item != null)
        {
            OrderItem.Id = SelectedItem.Id;
            OrderItem.Qty = 1;
            OrderItem.Category = item.Category;
            OrderItem.Price = SelectedItem.Prices.FirstOrDefault();
            OrderItem.PriceType = SelectedItem.PricesTypes.FirstOrDefault();
            OrderItem.Option = SelectedItem.Options.FirstOrDefault();
            OrderItem.Name = item.Name;
        }
    }

    OrderItem OrderItem = new OrderItem();

    void OnPriceSelectChange(int index)
    {
        OrderItem.Price = SelectedItem.Prices[index];
        OrderItem.PriceType = SelectedItem.PricesTypes.ElementAtOrDefault(index);
    }

    void OnSubmit()
    {
        MainService.AddItemToCart(OrderItem);
        SelectItem(null);
    }
}
