@page "/shop"
@using SukkotMeNET.Extensions
@using SukkotMeNET.Models
@using SukkotMeNET.Services
@inject AppStateService _State
@attribute [Authorize(Policy = Constants.Policies.IsUser)]

<div class="antialiased bg-gray-200 dark:bg-gray-800 text-gray-900 font-sans p-6 flex-grow">
    <div class="container mx-auto">
        <div class="flex flex-wrap -mx-4">
            @foreach (var item in _State.ShopItems)
            {
                if (item.Prices.Any(p => p > 0))
                {
                    <div @onclick="() => SelectItem(item)" class="w-full sm:w-1/2 md:w-1/3 xl:w-1/4 p-4">
                        <div class="c-card block bg-white shadow-md hover:shadow-xl rounded-lg overflow-hidden">
                            <div>
                                <img class="inset-0 object-contain mx-auto" style="width:200px; height:200px;" src=@item.GetItemIcon() alt="logo" />
                            </div>
                            <div class="p-3 items-center text-sm text-gray-600">
                                <h5 class="font-bold">@item.Name</h5>
                                <p class="my-1">@item.Prices.GetFriednlyRange('$')</p>

                                <button class="font-medium bg-green-500 hover:bg-green-700 text-white py-1 px-2 rounded">
                                    Add To Cart
                                </button>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

@if (_SelectedItem != null)
{
    <div class="fixed w-full h-full top-0 z-50 bg-opacity-50 bg-white" @onclick="() => SelectItem(null)">
        <div class="grid justify-center w-full h-full">
            <div class="w-full my-4 lg:self-center">
                <div @onclick:stopPropagation="true" class="relative z-10 h-auto py-10 px-7 overflow-hidden bg-white dark:bg-gray-800 border-b-2 border-gray-300 dark:border-gray-900 rounded-lg shadow-2xl">
                    <EditForm Model="@OrderItem" OnSubmit="@OnSubmit">
                        <h3 class="mb-6 text-2xl font-medium dark:text-gray-300">
                            @_SelectedItem.Name
                        </h3>

                        <select @onchange="e => OnPriceSelectChange(Convert.ToInt32(e.Value))"
                            required class="block w-full px-4 py-3 mb-4 border border-2 border-transparent border-gray-200 rounded-lg focus:ring focus:ring-green-500 focus:outline-none">
                            @for (int i = 0; i < _SelectedItem.Prices.Length; i++)
                            {
                                <option value="@i">
                                    $@_SelectedItem.Prices[i]
                                    @if (_SelectedItem.PricesTypes.ElementAtOrDefault(i) != null)
                                    {
                                        <span> - @_SelectedItem.PricesTypes[i]</span>
                                    }
                                </option>
                            }
                        </select>
                        @if (_SelectedItem.Options.Length > 1)
                        {
                            <select @bind="OrderItem.Option" required class="block w-full px-4 py-3 mb-4 border border-2 border-transparent border-gray-200 rounded-lg focus:ring focus:ring-green-500 focus:outline-none">
                                @foreach (var option in _SelectedItem.Options)
                                {
                                    <option value="@option">@option</option>
                                }
                            </select>
                        }

                        <span class="relative inline-flex w-full">
                            <input required type="number" min="1" placeholder="Qty" @bind-value="OrderItem.Qty"
                               class="block w-full px-4 py-3 mb-4 border border-2 border-transparent border-gray-200 rounded-lg focus:ring focus:ring-green-500 focus:outline-none" />
                        </span>

                        <div class="block">
                            <button class="w-full px-3 py-4 font-medium text-white bg-green-600 rounded-lg" type="submit">
                                Add To Cart
                            </button>
                            <button type="button" @onclick="() => SelectItem(null)" class="w-full px-3 pt-3 font-medium text-gray-600 dark:text-gray-400">
                                Go Back Shopping
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Inject]
    MainStateService MainService { get; set; }

    Item? _SelectedItem;

    void SelectItem(Item? item)
    {
        _SelectedItem = item;

        if (item != null)
        {
            OrderItem.Id = _SelectedItem.Id;
            OrderItem.Qty = 1;
            OrderItem.Price = _SelectedItem.Prices.FirstOrDefault();
            OrderItem.PriceType = _SelectedItem.PricesTypes.FirstOrDefault();
            OrderItem.Option = _SelectedItem.Options.FirstOrDefault();
            OrderItem.Name = item.Name;
        }

        StateHasChanged();
    }

    OrderItem OrderItem = new OrderItem();

    void OnPriceSelectChange(int index)
    {
        if (_SelectedItem != null)
        {
            OrderItem.Price = _SelectedItem.Prices[index];
            OrderItem.PriceType = _SelectedItem.PricesTypes.ElementAtOrDefault(index);
        }
    }

    async void OnSubmit()
    {
        _ = await MainService.AddItemToCart(OrderItem);
        SelectItem(null);
    }
}
